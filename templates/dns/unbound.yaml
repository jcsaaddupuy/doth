{{- if eq (.Values.unbound.enabled | toString) "true" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.unbound.serviceName }}-configmap"
  labels:
    app: {{ .Values.unbound.serviceName }}
  annotations:
        checksum/unbound.conf: {{ tpl (.Files.Get "config/unbound/unbound.conf") .Values.unbound | sha256sum }}
data:
  unbound.conf: |-
{{ tpl (.Files.Get "config/unbound/unbound.conf") .Values.unbound | nindent 4 }}

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.unbound.serviceName }}
spec:
  selector:
    matchLabels:
      run: {{ .Values.unbound.serviceName }}
  replicas: {{ .Values.unbound.deployment.replicaCount }}
  template:
    metadata:
      labels:
        run: {{ .Values.unbound.serviceName }}
    spec:
      containers:
        - name: {{ .Values.unbound.serviceName }}
          image: {{ .Values.unbound.deployment.image.repository }}
          ports:
            - containerPort: {{ .Values.unbound.service.port }}
              protocol: UDP
              name: 'udp-53'
            - containerPort: {{ .Values.unbound.service.port }}
              protocol: TCP
              name: 'tcp-53'
          
          # liveness : predically resolve a domain
          # livenessProbe:
          #   exec:
          #     command:
          #       - drill
          #       - '@{{ .Values.unbound.serviceName }}.{{ .Release.Namespace }}.svc.cluster.local'
          #       - {{ .Values.unbound.deployment.livenessProbe.healthcheckDomain }}
          #   initialDelaySeconds:  {{ .Values.unbound.deployment.livenessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.unbound.deployment.livenessProbe.periodSeconds }}
          
          # Configuration
          volumeMounts:
          - name: unbound-volume
            mountPath: /opt/unbound/etc/unbound/unbound.conf
            subPath: unbound.conf
      volumes:
        - name: unbound-volume
          configMap:
            name: unbound-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.unbound.serviceName }}
  labels:
    run: {{ .Values.unbound.serviceName }}
spec:
  # type: {{ .Values.unbound.service.type }}
  ports:
    - port:  {{ .Values.unbound.service.port }}
      protocol: TCP
      name: "tcp-{{ .Values.unbound.service.port }}"
      targetPort: {{ .Values.unbound.service.targetPort }}
    - port:  {{ .Values.unbound.service.port }}
      protocol: UDP
      name: "udp-{{ .Values.unbound.service.port }}"
      targetPort: {{ .Values.unbound.service.targetPort }}
  selector:
    run: {{ .Values.unbound.serviceName }}
{{- end }}
