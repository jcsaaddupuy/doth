apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:
    my-ingress

spec:
  rules:
    - host: ns1.example.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: doh-proxy
                port:
                  number: 3000

# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: ingressroute
#   # namespace: traefik
# spec:
#   entryPoints:
#     - web
#     # - web-secure
#   routes:
#     - match: Host(`ns1.example.fr`)
#       kind: Rule
#       priority: 12
#       # defining several services is possible and allowed, but for now the servers of
#       # all the services (for a given route) get merged altogether under the same
#       # load-balancing strategy.
#       services:
#         - name: doh-proxy
#           port: 3000

#     - match: Host(`ns2.example.fr`)
#       services:
#         - name: doh-proxy-blocklist
#           port: 3000
#   # use an empty tls object for TLS with Let's Encrypt
#   # tls:
#   #   secretName: supersecret
#   #   options:
#   #     name: myTLSOption
#   #     namespace: default
#
---
apiVersion: traefik.io/v1alpha1
# apiVersion: apiextensions.k8s.io/v1
kind: IngressRoute
metadata:
  name: myingressroute

spec:
  entryPoints:
    - web

  routes:
    - match: Host(`ns1.example.fr`)
      kind: Rule
      services:
        - name: doh-proxy
          port: 3000

---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: ingressroutetcpfoo

spec:
  entryPoints:
    - doh
  routes:
    - match: "HostSNI(`*`)"
      services:
        - name: doh-proxy
          port: 3000
          weight: 10
