openresty:
  deployment:
    replicaCount: 1
    image:
      repository: openresty/openresty:bookworm-fat
      pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    protocol: TCP

unboundAuth:
  enabled: "true"
  serviceName: unbound-auth
  config:
    verbosity: 1
    logQueries: yes

    trustAnchorFile: "/opt/unbound/etc/unbound/data/root.key"
    rootHints: "/opt/unbound/etc/unbound/data/root.hints"
    interface: "0.0.0.0"
    accessControl: "0.0.0.0/0 allow"

    rootHintsUrl: https://www.internic.net/domain/named.root

  deployment:
    replicaCount: 1
    image:
      repository: mvance/unbound:latest
      pullPolicy: IfNotPresent

    livenessProbe:
      healthcheckDomain: cloudflare.com
      initialDelaySeconds: 5
      periodSeconds: 60

  service:
    type: ClusterIP
    port: 53
    clusterIP: 10.96.0.53

unbound:
  # enabled: true
  serviceName: unbound
  enabled: "true"

  config:
    verbosity: 0
    logQueries: no
    interface: "0.0.0.0"
    accessControl: "0.0.0.0/0 allow"
    forwardZones:
      - name: "."
        forwardAddresses:
          - 10.96.0.53

  deployment:
    replicaCount: 1
    image:
      repository: mvance/unbound:latest
      pullPolicy: IfNotPresent

    livenessProbe:
      healthcheckDomain: cloudflare.com
      initialDelaySeconds: 5
      periodSeconds: 60

  service:
    type: ClusterIP
    port: 53

# Unbound configured with blocklists
unboundBlocklist:
  serviceName: unbound-blocklist
  enabled: "true"

  config:
    verbosity: 1
    logQueries: yes
    interface: "0.0.0.0"
    accessControl: "0.0.0.0/0 allow"
    includes:
      - "/opt/unbound/etc/unbound/blocklists/blacklist.conf"
    forwardZones:
      - name: "."
        forwardAddresses:
          - 10.96.0.53
    
    canaryDomain: 'blockme.localhost'

    blocklists:
      - name: StevenBlack
        url: https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
        # hostFileIpPattern: "0.0.0.0"


  deployment:
    replicaCount: 1
    image:
      repository: mvance/unbound:latest
      pullPolicy: IfNotPresent

    livenessProbe:
      healthcheckDomain: cloudflare.com
      initialDelaySeconds: 5
      periodSeconds: 60

  service:
    type: ClusterIP
    port: 53

dohProxy:
  serviceName: doh-proxy
  enabled: "{{ .Values.unbound.enabled }}"
  config:
    bindAddress: "0.0.0.0"
    listenAddress: "{{.Values.dohProxy.config.bindAddress}}:{{.Values.dohProxy.service.port}}"
    serverAddress: "{{ .Values.unbound.serviceName }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.unbound.service.port }}"

  deployment:
    replicaCount: 1
    image:
      repository: jcsaaddupuy/doh-server:latest
      pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3000
    protocol: TCP

dohProxyBlocklist:
  serviceName: doh-proxy-blocklist
  enabled: "{{ .Values.unboundBlocklist.enabled }}"

  config:
    bindAddress: "0.0.0.0"
    listenAddress: "{{.Values.dohProxyBlocklist.config.bindAddress}}:{{.Values.dohProxyBlocklist.service.port}}"
    serverAddress: "{{ .Values.unboundBlocklist.serviceName }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.unboundBlocklist.service.port }}"


  deployment:
    replicaCount: 1
    image:
      repository: jcsaaddupuy/doh-server:latest
      pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3000
    protocol: TCP
 
ingress:
  name: doh-ingress
  enabled: "true"

  rootDomain: example.fr

  certManager:
    issuer: "letsencrypt-staging"
  
  tls:
    secretName: "{{.Values.ingress.name}}-tls"

  hosts:
    - host: "ns1.{{.Values.ingress.rootDomain}}"
      enabled: "{{ .Values.dohProxy.enabled }}"
      paths:
        - path: /
          backend:
              serviceName: "{{ .Values.dohProxy.serviceName }}"
              servicePort: "{{ .Values.dohProxy.service.port }}"

    - host: "ns2.{{.Values.ingress.rootDomain}}"
      enabled: "{{ .Values.dohProxyBlocklist.enabled }}"
      paths:
        - path: /
          backend:
              serviceName: "{{ .Values.dohProxyBlocklist.serviceName }}"
              servicePort: "{{ .Values.dohProxyBlocklist.service.port }}"

# https://www.haproxy.com/documentation/kubernetes-ingress/ingress-tutorials/terminate-ssl/#sidebar

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi


# # autoscaling:
# #   enabled: false
# #   minReplicas: 1
# #   maxReplicas: 100
# #   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# # volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# # nodeSelector: {}

# # tolerations: []

# # affinity: {}
